export const original = [
  'plus',
  'minus',
  'multiply',
  'divide',
  'intDiv',
  'intDivOrZero',
  'modulo',
  'moduloOrZero',
  'negate',
  'abs',
  'gcd',
  'lcm',
  'empty',
  'notEmpty',
  'length',
  'emptyArrayUInt8',
  'emptyArrayUInt16',
  'emptyArrayUInt32',
  'emptyArrayUInt64',
  'emptyArrayInt8',
  'emptyArrayInt16',
  'emptyArrayInt32',
  'emptyArrayInt64',
  'emptyArrayFloat32',
  'emptyArrayFloat64',
  'emptyArrayDate',
  'emptyArrayDateTime',
  'emptyArrayString',
  'emptyArrayToSingle',
  'range',
  'array',
  'arrayConcat',
  'arrayElement',
  'has',
  'hasAll',
  'hasAny',
  'hasSubstr',
  'indexOf',
  'arrayCount',
  'countEqual',
  'arrayEnumerate',
  'arrayEnumerateUniq',
  'arrayPopBack',
  'arrayPopFront',
  'arrayPushBack',
  'arrayPushFront',
  'arrayResize',
  'arraySlice',
  'arraySort',
  'arrayReverseSort',
  'arrayUniq',
  'arrayJoin',
  'arrayDifference',
  'arrayDistinct',
  'arrayEnumerateDense',
  'arrayIntersect',
  'arrayReduce',
  'arrayReduceInRanges',
  'arrayReverse',
  'reverse',
  'arrayFlatten',
  'arrayCompact',
  'arrayZip',
  'arrayAUC',
  'arrayMap',
  'arrayFilter',
  'arrayFill',
  'arrayReverseFill',
  'arraySplit',
  'arrayReverseSplit',
  'arrayExists',
  'arrayAll',
  'arrayFirst',
  'arrayFirstIndex',
  'arrayMin',
  'arrayMax',
  'arraySum',
  'arrayAvg',
  'arrayCumSum',
  'arrayCumSumNonNegative',
  'arrayProduct',
  'equals',
  'notEquals',
  'less',
  'greater',
  'lessOrEquals',
  'greaterOrEquals',
  'and',
  'or',
  'not',
  'xor',
  'toInt8',
  'toInt16',
  'toInt32',
  'toInt64',
  'toInt128',
  'toInt256',
  'toInt8OrZero',
  'toInt16OrZero',
  'toInt32OrZero',
  'toInt64OrZero',
  'toInt128OrZero',
  'toInt256OrZero',
  'toInt8OrNull',
  'toInt16OrNull',
  'toInt32OrNull',
  'toInt64OrNull',
  'toInt128OrNull',
  'toInt256OrNull',
  'toUInt8',
  'toUInt16',
  'toUInt32',
  'toUInt64',
  'toUInt128',
  'toUInt256',
  'toUInt8OrZero',
  'toUInt16OrZero',
  'toUInt32OrZero',
  'toUInt64OrZero',
  'toUInt128OrZero',
  'toUInt256OrZero',
  'toUInt8OrNull',
  'toUInt16OrNull',
  'toUInt32OrNull',
  'toUInt64OrNull',
  'toUInt128OrNull',
  'toUInt256OrNull',
  'toFloat32',
  'toFloat64',
  'toFloat32OrZero',
  'toFloat64OrZero',
  'toFloat32OrNull',
  'toFloat64OrNull',
  'toDate',
  'toDateOrZero',
  'toDateOrNull',
  'toDateTime',
  'toDateTimeOrZero',
  'toDateTimeOrNull',
  'toDate32',
  'toDate32OrZero',
  'toDate32OrNull',
  'toDecimal32',
  'toDecimal64',
  'toDecimal128',
  'toDecimal256',
  'toDecimal32OrNull',
  'toDecimal64OrNull',
  'toDecimal128OrNull',
  'toDecimal256OrNull',
  'toDecimal32OrZero',
  'toDecimal64OrZero',
  'toDecimal128OrZero',
  'toDecimal256OrZero',
  'toString',
  'toFixedString',
  'toStringCutToZero',
  'reinterpretAsUInt8',
  'reinterpretAsUInt16',
  'reinterpretAsUInt32',
  'reinterpretAsUInt64',
  'reinterpretAsInt8',
  'reinterpretAsInt16',
  'reinterpretAsInt32',
  'reinterpretAsInt64',
  'reinterpretAsFloat32',
  'reinterpretAsFloat64',
  'reinterpretAsDate',
  'reinterpretAsDateTime',
  'reinterpretAsString',
  'reinterpretAsFixedString',
  'reinterpretAsUUID',
  'reinterpret',
  'CAST',
  'accurateCast',
  'accurateCastOrNull',
  'toIntervalSecond',
  'toIntervalMinute',
  'toIntervalHour',
  'toIntervalDay',
  'toIntervalWeek',
  'toIntervalMonth',
  'toIntervalQuarter',
  'toIntervalYear',
  'parseDateTimeBestEffort',
  'parseDateTime32BestEffort',
  'parseDateTimeBestEffortUS',
  'parseDateTimeBestEffortOrNull',
  'parseDateTime32BestEffortOrNull',
  'parseDateTimeBestEffortOrZero',
  'parseDateTime32BestEffortOrZero',
  'parseDateTimeBestEffortUSOrNull',
  'parseDateTimeBestEffortUSOrZero',
  'parseDateTime64BestEffort',
  'parseDateTime64BestEffortOrNull',
  'parseDateTime64BestEffortOrZero',
  'toLowCardinality',
  'toUnixTimestamp64Milli',
  'toUnixTimestamp64Micro',
  'toUnixTimestamp64Nano',
  'fromUnixTimestamp64Milli',
  'fromUnixTimestamp64Micro',
  'fromUnixTimestamp64Nano',
  'formatRow',
  'formatRowNoNewline',
  'snowflakeToDateTime',
  'snowflakeToDateTime64',
  'dateTimeToSnowflake',
  'dateTime64ToSnowflake',
  'timeZone',
  'toTimeZone',
  'timeZoneOf',
  'timeZoneOffset',
  'toYear',
  'toQuarter',
  'toMonth',
  'toDayOfYear',
  'toDayOfMonth',
  'toDayOfWeek',
  'toHour',
  'toMinute',
  'toSecond',
  'toUnixTimestamp',
  'toStartOfYear',
  'toStartOfISOYear',
  'toStartOfQuarter',
  'toStartOfMonth',
  'toMonday',
  'toStartOfWeek',
  'toStartOfDay',
  'toStartOfHour',
  'toStartOfMinute',
  'toStartOfSecond',
  'toStartOfFiveMinute',
  'toStartOfTenMinutes',
  'toStartOfFifteenMinutes',
  'toStartOfInterval',
  'toTime',
  'toRelativeYearNum',
  'toRelativeQuarterNum',
  'toRelativeMonthNum',
  'toRelativeWeekNum',
  'toRelativeDayNum',
  'toRelativeHourNum',
  'toRelativeMinuteNum',
  'toRelativeSecondNum',
  'toISOYear',
  'toISOWeek',
  'toWeek',
  'toYearWeek',
  'date_trunc',
  'date_add',
  'date_diff',
  'date_sub',
  'timestamp_add',
  'timestamp_sub',
  'now',
  'today',
  'yesterday',
  'timeSlot',
  'toYYYYMM',
  'toYYYYMMDD',
  'toYYYYMMDDhhmmss',
  'addYears',
  'addMonths',
  'addWeeks',
  'addDays',
  'addHours',
  'addMinutes',
  'addSeconds',
  'addQuarters',
  'subtractYears',
  'subtractMonths',
  'subtractWeeks',
  'subtractDays',
  'subtractHours',
  'subtractMinutes',
  'subtractSeconds',
  'subtractQuarters',
  'timeSlots',
  'formatDateTime',
  'dateName',
  'FROM_UNIXTIME',
  'toModifiedJulianDay',
  'toModifiedJulianDayOrNull',
  'fromModifiedJulianDay',
  'fromModifiedJulianDayOrNull',
  'empty',
  'notEmpty',
  'length',
  'lengthUTF8',
  'char_length',
  'character_length',
  'leftPad',
  'leftPadUTF8',
  'rightPad',
  'rightPadUTF8',
  'lower',
  'lcase',
  'upper',
  'ucase',
  'lowerUTF8',
  'upperUTF8',
  'isValidUTF8',
  'toValidUTF8',
  'repeat',
  'reverse',
  'reverseUTF8',
  'format',
  'concat',
  'concatAssumeInjective',
  'substring',
  'mid',
  'substr',
  'substringUTF8',
  'appendTrailingCharIfAbsent',
  'convertCharset',
  'base64Encode',
  'base64Decode',
  'tryBase64Decode',
  'endsWith',
  'startsWith',
  'trim',
  'trimLeft',
  'trimRight',
  'trimBoth',
  'CRC32',
  'CRC32IEEE',
  'CRC64',
  'normalizeQuery',
  'normalizedQueryHash',
  'encodeXMLComponent',
  'decodeXMLComponent',
  'extractTextFromHTML',
  'position',
  'positionCaseInsensitive',
  'positionUTF8',
  'positionCaseInsensitiveUTF8',
  'multiSearchAllPositions',
  'multiSearchAllPositionsUTF8',
  'multiSearchFirstPosition',
  'multiSearchFirstIndex',
  'multiSearchAny',
  'match',
  'multiMatchAny',
  'multiMatchAnyIndex',
  'multiMatchAllIndices',
  'multiFuzzyMatchAny',
  'multiFuzzyMatchAnyIndex',
  'multiFuzzyMatchAllIndices',
  'extract',
  'extractAll',
  'extractAllGroupsHorizontal',
  'extractAllGroupsVertical',
  'like',
  'notLike',
  'ilike',
  'ngramDistance',
  'ngramSearch',
  'countSubstrings',
  'countSubstringsCaseInsensitive',
  'countSubstringsCaseInsensitiveUTF8',
  'countMatches',
  'replace',
  'replaceOne',
  'replaceAll',
  'replaceRegexpOne',
  'replaceRegexpAll',
  'regexpQuoteMeta',
  'if',
  'multilf',
  'file',
  'e',
  'pi',
  'exp',
  'log',
  'exp2',
  'log2',
  'exp10',
  'log10',
  'sqrt',
  'cbrt',
  'erf',
  'erfc',
  'lgamma',
  'tgamma',
  'sin',
  'cos',
  'tan',
  'asin',
  'acos',
  'atan',
  'pow',
  'intExp2',
  'intExp10',
  'cosh',
  'acosh',
  'sinh',
  'asinh',
  'atanh',
  'atan2',
  'hypot',
  'log1p',
  'sign',
  'floor',
  'ceil',
  'trunc',
  'round',
  'roundBanders',
  'roundToExp2',
  'roundDuration',
  'roundAge',
  'roundDown',
  'map',
  'mapAdd',
  'mapSubtract',
  'mapPopulateSeries',
  'mapContains',
  'mapKeys',
  'mapValues',
  'splitByChar',
  'splitByString',
  'splitByRegexp',
  'splitByWhitespace',
  'splitByNonAlpha',
  'arrayStringConcat',
  'alphaTokens',
  'extractAllGroups',
  'bitAnd',
  'bitOr',
  'bitXor',
  'bitNot',
  'bitShiftLeft',
  'bitShiftRight',
  'bitRotateLeft',
  'bitRotateRight',
  'bitTest',
  'bitTestAll',
  'bitTestAny',
  'bitCount',
  'bitHammingDistance',
  'bitmapBuild',
  'bitmapToArray',
  'bitmapSubsetInRange',
  'bitmapSubsetLimit',
  'subBitmap',
  'bitmapContains',
  'bitmapHasAny',
  'bitmapHasAll',
  'bitmapCardinality',
  'bitmapMin',
  'bitmapMax',
  'bitmapTransform',
  'bitmapAnd',
  'bitmapOr',
  'bitmapXor',
  'bitmapAndnot',
  'bitmapAndCardinality',
  'bitmapOrCardinality',
  'bitmapXorCardinality',
  'bitmapAndnotCardinality',
  'halfMD5',
  'MD5',
  'sipHash64',
  'sipHash128',
  'cityHash64',
  'intHash32',
  'intHash64',
  'SHA1',
  'SHA224',
  'SHA256',
  'SHA512',
  'URLHash',
  'farmFingerprint64',
  'farmHash64',
  'javaHash',
  'javaHashUTF16LE',
  'hiveHash',
  'metroHash64',
  'jumpConsistentHash',
  'murmurHash2_32',
  'murmurHash2_64',
  'gccMurmurHash',
  'murmurHash3_32',
  'murmurHash3_64',
  'murmurHash3_128',
  'xxHash32',
  'xxHash64',
  'ngramSimHash',
  'ngramSimHashCaseInsensitive',
  'ngramSimHashUTF8',
  'ngramSimHashCaseInsensitiveUTF8',
  'wordShingleSimHash',
  'wordShingleSimHashCaseInsensitive',
  'wordShingleSimHashUTF8',
  'wordShingleSimHashCaseInsensitiveUTF8',
  'ngramMinHash',
  'ngramMinHashCaseInsensitive',
  'ngramMinHashUTF8',
  'ngramMinHashCaseInsensitiveUTF8',
  'ngramMinHashArg',
  'ngramMinHashArgCaseInsensitive',
  'ngramMinHashArgUTF8',
  'ngramMinHashArgCaseInsensitiveUTF8',
  'wordShingleMinHash',
  'wordShingleMinHashCaseInsensitive',
  'wordShingleMinHashUTF8',
  'wordShingleMinHashCaseInsensitiveUTF8',
  'wordShingleMinHashArg',
  'wordShingleMinHashArgCaseInsensitive',
  'wordShingleMinHashArgUTF8',
  'wordShingleMinHashArgCaseInsensitiveUTF8',
  'rand',
  'rand32',
  'rand64',
  'randConstant',
  'char',
  'hex',
  'unhex',
  'bin',
  'unbin',
  'UUIDStringToNum',
  'UUIDNumToString',
  'bitmaskToList',
  'bitmaskToArray',
  'bitPositionsToArray',
  'generateUUIDv4',
  'empty',
  'notEmpty',
  'toUUID',
  'toUUIDOrNull',
  'toUUIDOrZero',
  'UUIDStringToNum',
  'UUIDNumToString',
  'serverUUID',
  'protocol',
  'domain',
  'domainWithoutWWW',
  'topLevelDomain',
  'firstSignificantSubdomain',
  'cutToFirstSignificantSubdomain',
  'cutToFirstSignificantSubdomainWithWWW',
  'cutToFirstSignificantSubdomainCustom',
  'cutToFirstSignificantSubdomainCustomWithWWW',
  'firstSignificantSubdomainCustom',
  'port',
  'path',
  'pathFull',
  'queryString',
  'fragment',
  'queryStringAndFragment',
  'extractURLParameter',
  'extractURLParameters',
  'extractURLParameterNames',
  'URLHierarchy',
  'URLPathHierarchy',
  'decodeURLComponent',
  'netloc',
  'cutWWW',
  'cutQueryString',
  'cutFragment',
  'cutQueryStringAndFragment',
  'cutURLParameter',
  'IPv4NumToString',
  'IPv4StringToNum',
  'IPv4NumToStringClassC',
  'IPv6NumToString',
  'IPv6StringToNum',
  'IPv4ToIPv6',
  'cutIPv6',
  'IPv4CIDRToRange',
  'IPv6CIDRToRange',
  'toIPv4',
  'toIPv6',
  'isIPv4String',
  'isIPv6String',
  'isIPAddressInRange',
  'visitParamHas',
  'visitParamExtractUInt',
  'visitParamExtractInt',
  'visitParamExtractFloat',
  'visitParamExtractBool',
  'visitParamExtractRaw',
  'visitParamExtractString',
  'isValidJSON',
  'JSONHas',
  'JSONLength',
  'JSONType',
  'JSONExtractUInt',
  'JSONExtractInt',
  'JSONExtractFloat',
  'JSONExtractBool',
  'JSONExtractString',
  'JSONExtract',
  'JSONExtractKeysAndValues',
  'JSONExtractRaw',
  'JSONExtractArrayRaw',
  'JSONExtractKeysAndValuesRaw',
  'toJSONString',
  'dictGet',
  'dictGetOrDefault',
  'dictGetOrNull',
  'dictHas',
  'dictGetHierarchy',
  'dictIsIn',
  'dictGetChildren',
  'dictGetDescendant',
  'regionToCity',
  'regionToArea',
  'regionToDistrict',
  'regionToCountry',
  'regionToContinent',
  'regionToTopContinent',
  'regionToPopulation',
  'regionIn',
  'regionHierarchy',
  'regionToName',
  'arrayJoin',
  'greatCircleDistance',
  'geoDistance',
  'greatCircleAngle',
  'pointInEllipses',
  'pointInPolygon',
  'geohashEncode',
  'geohashDecode',
  'geohashesInBox',
  'h3IsValid',
  'h3GetResolution',
  'h3EdgeAngle',
  'h3EdgeLengthM',
  'geoToH3',
  'h3ToGeo',
  'h3kRing',
  'h3GetBaseCell',
  'h3HexAreaM2',
  'h3IndexesAreNeighbors',
  'h3ToChildren',
  'h3ToParent',
  'h3ToString',
  'stringToH3',
  'h3GetResolution',
  'isNull',
  'isNotNull',
  'coalesce',
  'ifNull',
  'nullIf',
  'assumeNotNull',
  'toNullable',
  'evalMLMethod',
  'stochasticLinearRegression',
  'stochasticLogisticRegression',
  'bayesAB',
  'addressToLine',
  'addressToSymbol',
  'demangle',
  'tid',
  'logTrace',
  'tuple',
  'tupleElement',
  'untuple',
  'tupleHammingDistance',
  'encrypt',
  'aes_encrypt_mysql',
  'decrypt',
  'aes_decrypt_mysql',
  'stem',
  'lemmatize',
  'synonyms',
  'hostName',
  'getMacro',
  'FQDN',
  'basename',
  'visibleWidth',
  'toTypeName',
  'blockSize',
  'byteSize',
  'materialize',
  'ignore',
  'sleep',
  'sleepEachRow',
  'currentDatabase',
  'currentUser',
  'isConstant',
  'isFinite',
  'isInfinite',
  'ifNotFinite',
  'isNaN',
  'hasColumnInTable',
  'bar',
  'transform',
  'formatReadableSize',
  'formatReadableQuantity',
  'formatReadableTimeDelta',
  'least',
  'greatest',
  'uptime',
  'version',
  'blockNumber',
  'rowNumberInBlock',
  'rowNumberInAllBlocks',
  'neighbor',
  'runningDifference',
  'runningDifferenceStartingWithFirstValue',
  'runningConcurrency',
  'MACNumToString',
  'MACStringToNum',
  'MACStringToOUI',
  'getSizeOfEnumType',
  'blockSerializedSize',
  'toColumnTypeName',
  'dumpColumnStructure',
  'defaultValueOfArgumentType',
  'defaultValueOfTypeName',
  'indexHint',
  'replicate',
  'filesystemAvailable',
  'filesystemFree',
  'filesystemCapacity',
  'initializeAggregation',
  'finalizeAggregation',
  'runningAccumulate',
  'joinGet',
  'modelEvaluate',
  'throwIf',
  'identity',
  'randomPrintableASCII',
  'randomString',
  'randomFixedString',
  'randomStringUTF8',
  'getSetting',
  'isDecimalOverflow',
  'countDigits',
  'errorCodeToName',
  'tcpPort',
  'currentProfiles',
  'enabledProfiles',
  'defaultProfiles',
  'currentRoles',
  'enabledRoles',
  'defaultRoles',
  'getServerPort',
  'queryID',
  'initialQueryID',
];

const s = new Set(original);
export const clickhouseCommonFunctions = Array.from(s).sort();
// console.log('clickhouseCommonFunctions', clickhouseCommonFunctions);


function tool(list) {
  const res = [];
  const stage1 = list.split('\n');
  for (let i = 0; i < stage1.length; ++i) {
    res.push(stage1[i].split('(')[0].trim());
  }
  const res2 = [];
  for (let i = 0; i < res.length; ++i) {
    res2.push(...res[i].split(',').map((item) => item && item.trim()));
  }
  return res2;
}
